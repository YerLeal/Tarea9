/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import client.MyClient;
import domain.Student;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Yerlin Leal
 */
public class JIFUpdate extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFUpdate
     */
    public JIFUpdate() {
        this.setVisible(false);
        initComponents();
        this.jbSearch.setFocusable(false);
        this.jbUpdate.setFocusable(false);
        blockTextFields(true);
        this.jlMessage.setForeground(Color.red);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfId = new javax.swing.JTextField();
        jbSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jtfLastname = new javax.swing.JTextField();
        jtfAge = new javax.swing.JTextField();
        jtfTown = new javax.swing.JTextField();
        jtfAdmissionGrade = new javax.swing.JTextField();
        jbUpdate = new javax.swing.JButton();
        jlMessage = new javax.swing.JLabel();
        jbClean = new javax.swing.JButton();

        setClosable(true);
        setTitle("Update");

        jLabel1.setText("ID");

        jbSearch.setText("Search");
        jbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSearchActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel3.setText("Lastname");

        jLabel4.setText("Age");

        jLabel5.setText("Town");

        jLabel6.setText("Admission Grade");

        jbUpdate.setText("Update");
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });

        jlMessage.setText("jLabel7");

        jbClean.setText("Clean");
        jbClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbClean)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbUpdate))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfAdmissionGrade))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfName)
                                    .addComponent(jtfLastname)
                                    .addComponent(jtfAge)
                                    .addComponent(jtfTown))))
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(83, 83, 83))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfTown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfAdmissionGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbUpdate)
                    .addComponent(jbClean))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlMessage)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSearchActionPerformed
        if (this.jtfId.getText().equals("")) {
            this.jlMessage.setForeground(Color.red);
            this.jlMessage.setText("The id is required");
        } else {
            this.jlMessage.setText(" ");
            MyClient client = new MyClient();
            client.setAction("R1");
            client.setMessage(this.jtfId.getText());
            client.start();
            while (true) {
                if (client.getMessage().equals("") || client.getMessage().equals("The id does not exist")) {
                    break;
                }
                try {
                    Thread.sleep(400);
                } catch (InterruptedException ex) {
                    Logger.getLogger(JIFUpdate.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (client.getMessage().equals("The id does not exist")) {
                System.out.println("sdvfaggG");
                this.jtfName.setText("");
                this.jtfLastname.setText("");
                this.jtfAge.setText("");
                this.jtfTown.setText("");
                this.jtfAdmissionGrade.setText("");
                this.jlMessage.setForeground(Color.red);
            } else {
                Student student = client.getStudent();
                this.jtfName.setText(student.getName());
                this.jtfLastname.setText(student.getLastname());
                this.jtfAge.setText(String.valueOf(student.getAge()));
                this.jtfTown.setText(student.getTown());
                this.jtfAdmissionGrade.setText(String.valueOf(student.getAdmissionGrade()));
                blockTextFields(false);
            }
            this.jlMessage.setText(client.getMessage());
        }
    }//GEN-LAST:event_jbSearchActionPerformed

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        if (this.jtfName.getText().equals("") || this.jtfLastname.getText().equals("") || this.jtfTown.getText().equals("")) {
            this.jlMessage.setForeground(Color.RED);
            this.jlMessage.setText("All fields are required.");
        } else {
            try {
                String id = this.jtfId.getText();
                String name = this.jtfName.getText();
                String lastname = this.jtfLastname.getText();
                int age = Integer.parseInt(this.jtfAge.getText());
                String town = this.jtfTown.getText();
                float admissionGrade = Float.parseFloat(this.jtfAdmissionGrade.getText());
                MyClient client = new MyClient();
                client.setAction("U");
                client.setStudent(new Student(id, name, lastname, age, town, admissionGrade));
                client.start();
                while (true) {
                    if (client.getMessage().equals("Success")) {
                        break;
                    }
                    Thread.sleep(400);
                }
                if (client.getMessage().equals("Success")) {
                    this.jlMessage.setForeground(Color.GREEN);
                    this.jlMessage.setText(client.getMessage());
                    this.jbClean.setEnabled(true);
                }
            } catch (NumberFormatException nfe) {
                this.jlMessage.setForeground(Color.RED);
                this.jlMessage.setText("The age and the grade must be numbers");
            } catch (InterruptedException ex) {
                Logger.getLogger(JIFUpdate.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbUpdateActionPerformed

    private void jbCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCleanActionPerformed
        this.jtfId.setText("");
        this.jtfName.setText("");
        this.jtfLastname.setText("");
        this.jtfAge.setText("");
        this.jtfTown.setText("");
        this.jtfAdmissionGrade.setText("");
        blockTextFields(true);
    }//GEN-LAST:event_jbCleanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbClean;
    private javax.swing.JButton jbSearch;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JLabel jlMessage;
    private javax.swing.JTextField jtfAdmissionGrade;
    private javax.swing.JTextField jtfAge;
    private javax.swing.JTextField jtfId;
    private javax.swing.JTextField jtfLastname;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfTown;
    // End of variables declaration//GEN-END:variables

    private void blockTextFields(boolean b) {
        this.jlMessage.setText("");
        if (b) {
            this.jtfName.setEnabled(false);
            this.jtfLastname.setEnabled(false);
            this.jtfAge.setEnabled(false);
            this.jtfTown.setEnabled(false);
            this.jtfAdmissionGrade.setEnabled(false);
            this.jbUpdate.setEnabled(false);
            this.jbClean.setEnabled(false);
            this.jbSearch.setEnabled(true);
            this.jtfId.setEnabled(true);
        } else {
            this.jtfId.setEnabled(false);
            this.jbSearch.setEnabled(false);
            this.jtfName.setEnabled(true);
            this.jtfLastname.setEnabled(true);
            this.jtfAge.setEnabled(true);
            this.jtfTown.setEnabled(true);
            this.jtfAdmissionGrade.setEnabled(true);
            this.jbUpdate.setEnabled(true);
        }
    } // blockTextFields

} // end class
